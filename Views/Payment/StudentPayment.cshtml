@using AthleteTracker.Models
@model PaymentListViewModel
@{
    ViewData["Title"] = "Student Payments";
}

<div class="container mt-4">
    <div class="card mb-4">
        <div class="card-body">
            <h2 class="card-title">Payments for @Model.StudentName</h2>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Due Date</th>
                            <th>Session</th>
                            <th>Amount</th>
                            <th>Status</th>
                            <th>Payment Date</th>
                            <th>Payment Method</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var payment in Model.Payments)
                        {
                            <tr class="@(payment.Status == PaymentStatus.Overdue ? "table-danger" : 
                                       payment.Status == PaymentStatus.Paid ? "table-success" : 
                                       payment.DueDate <= DateTime.Today ? "table-warning" : "")">
                                <td>@payment.DueDate.ToString("d")</td>
                                <td>@payment.SessionName</td>
                                <td>@payment.Amount.ToString("C")</td>
                                <td>
                                    <span class="badge @(payment.Status == PaymentStatus.Paid ? "bg-success" :
                                                       payment.Status == PaymentStatus.Overdue ? "bg-danger" :
                                                       "bg-warning")">
                                        @payment.Status
                                    </span>
                                </td>
                                <td>@(payment.PaymentDate?.ToString("d") ?? "-")</td>
                                <td>@(payment.PaymentMethod ?? "-")</td>
                                <td>
                                    @if (payment.Status == PaymentStatus.Pending || 
                                         payment.Status == PaymentStatus.Overdue)
                                    {
                                        <button type="button" 
                                                class="btn btn-primary btn-sm"
                                                onclick="showPaymentModal(@payment.PaymentId, @payment.Amount)">
                                            Make Payment
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Payment Modal -->
<div class="modal fade" id="paymentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="MakePayment" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" id="paymentId" name="paymentId" />
                <div class="modal-header">
                    <h5 class="modal-title">Make Payment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Amount to pay: <strong id="paymentAmount"></strong></p>
                    <div class="mb-3">
                        <label class="form-label">Payment Method</label>
                        <select name="paymentMethod" class="form-select" required>
                            <option value="">Select Payment Method</option>
                            <option value="Credit Card">Credit Card</option>
                            <option value="Bank Transfer">Bank Transfer</option>
                            <option value="Cash">Cash</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Process Payment</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showPaymentModal(paymentId, amount) {
            document.getElementById('paymentId').value = paymentId;
            document.getElementById('paymentAmount').textContent = 
                new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' })
                    .format(amount);
            new bootstrap.Modal(document.getElementById('paymentModal')).show();
        }
    </script>
}
